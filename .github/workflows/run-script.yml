name: Run Python Script
on:
  schedule:
    - cron: '*/180 * * * *'  # Runs every 180 minutes
  workflow_dispatch:  # Allows manual triggering
jobs:
  run-script:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'  # Use your required Python version
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install selenium telethon python-dotenv gdown
          
      - name: Install Edge browser and driver
        run: |
          curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > microsoft.gpg
          sudo install -o root -g root -m 644 microsoft.gpg /usr/share/keyrings/
          sudo sh -c 'echo "deb [arch=amd64 signed-by=/usr/share/keyrings/microsoft.gpg] https://packages.microsoft.com/repos/edge stable main" > /etc/apt/sources.list.d/microsoft-edge.list'
          sudo apt update
          sudo apt install microsoft-edge-stable
          wget https://msedgedriver.azureedge.net/133.0.3065.92/edgedriver_linux64.zip
          unzip edgedriver_linux64.zip
          sudo mv msedgedriver /usr/local/bin/
          sudo chmod +x /usr/local/bin/msedgedriver
          
      - name: Create base profile directory
        run: |
          mkdir -p "/home/runner/edge_profiles/Profile 3"
          
      - name: Download and extract Edge profile
        run: |
          gdown "https://drive.google.com/uc?export=download&id=1bnm3PelR9wSWhZb44HmMKKCIxEbU1QgD" -O "Profile3.zip"
          unzip "Profile3.zip" -d "/home/runner/edge_profiles/Profile 3"
          ls -la "/home/runner/edge_profiles/Profile 3"
          
      - name: Create .env file from secrets
        run: |
          echo "TELEGRAM_API_ID=${{ secrets.TELEGRAM_API_ID }}" > .env
          echo "TELEGRAM_API_HASH=${{ secrets.TELEGRAM_API_HASH }}" >> .env
          
      - name: Run Python script
        run: |
          python main.py
          
      - name: Upload screenshots for debugging
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: screenshots
          path: |
            *.png
            app.log
            
      - name: Clean up
        if: always()
        run: |
          rm -rf /home/runner/edge_profiles
